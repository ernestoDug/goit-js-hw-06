// Напиши скрипт управління формою логіна.

// Обробка відправлення форми form.login-form повинна відбуватися відповідно до події submit.

// Під час відправлення форми сторінка не повинна перезавантажуватися.

// Якщо у формі є незаповнені поля, виводь alert з попередженням про те, що всі поля повинні бути заповнені.

// Якщо користувач заповнив усі поля і відправив форму, збери значення полів в об'єкт, де ім'я поля буде ім'ям властивості,
// а значення поля - значенням властивості. Для доступу до елементів форми використовуй властивість elements.
// Виведи об'єкт із введеними даними в консоль і очисти значення полів форми методом reset.

// 1 СТУКАЮСЬ ДО ФОРМИ
const formLogin = document.querySelector(".login-form");
// 1/2 чипляю слухача відправки
formLogin.addEventListener("submit", sendForm);

// 2 ПИШУ КОЛБЕК
function sendForm(event) {
  // 3 СКАСОВУЮ ДЕФОЛТНУ ПОВЕДІНКУ БРАУЗЕРА
  event.preventDefault();
  // 4 збираю данні в об єт де імя властивості співпадає з іменем поля форми
  const {
    elements: { email, password },
    //    5 прив язую подію
  } = event.currentTarget;
  // 6 ставлю умови заповнення полів щоб не було пустих
  // використовую велью бо в елментс властивості форми  зберігаються данні полів форми де є атрибут нейм

  if (email.value === "") {
    alert("Коливання сили відчуваю на імейл твій чекаю :-)");
  } else if (password.value === "") {
    alert("Бачу що пароль не введено тобою...:-)");
  }
  // 7. запишу зібрані данні по змінним
  const emailValue = event.currentTarget.elements.email.value;
  const paswordValue = event.currentTarget.elements.email.pasword;
  // 8 виводжу в консоль зібрані дані
  console.log({ email: `${emailValue}`, password: `${paswordValue}` });
  //   9 напводжу лад в полях очиючи їх
  event.currentTarget.reset();
}
